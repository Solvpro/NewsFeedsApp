// Generated by Dagger (https://google.github.io/dagger).
package com.example.newsfeedsapp.ui.main.article;

import com.example.newsfeedsapp.ui.main.article.adap.ArticleAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class ArticleFragmentModule_ProvideMoreAdapterFactory
    implements Factory<ArticleAdapter> {
  private final ArticleFragmentModule module;

  public ArticleFragmentModule_ProvideMoreAdapterFactory(ArticleFragmentModule module) {
    this.module = module;
  }

  @Override
  public ArticleAdapter get() {
    return provideInstance(module);
  }

  public static ArticleAdapter provideInstance(ArticleFragmentModule module) {
    return proxyProvideMoreAdapter(module);
  }

  public static ArticleFragmentModule_ProvideMoreAdapterFactory create(
      ArticleFragmentModule module) {
    return new ArticleFragmentModule_ProvideMoreAdapterFactory(module);
  }

  public static ArticleAdapter proxyProvideMoreAdapter(ArticleFragmentModule instance) {
    return Preconditions.checkNotNull(
        instance.provideMoreAdapter(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
