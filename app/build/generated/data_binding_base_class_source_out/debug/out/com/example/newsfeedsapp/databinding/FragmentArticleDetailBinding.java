// Generated by data binding compiler. Do not edit!
package com.example.newsfeedsapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.newsfeedsapp.R;
import com.example.newsfeedsapp.ui.main.articledetail.ArticleDetailViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentArticleDetailBinding extends ViewDataBinding {
  @NonNull
  public final Button btnOpenWebsite;

  @NonNull
  public final ConstraintLayout clArticleDescription;

  @NonNull
  public final LinearLayout clBase;

  @NonNull
  public final ImageView ivArticleImage;

  @NonNull
  public final TextView tvArticleAuthor;

  @NonNull
  public final TextView tvArticleDate;

  @NonNull
  public final TextView tvArticleDescription;

  @NonNull
  public final TextView tvArticleTitle;

  @Bindable
  protected ArticleDetailViewModel mViewModel;

  protected FragmentArticleDetailBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button btnOpenWebsite, ConstraintLayout clArticleDescription, LinearLayout clBase,
      ImageView ivArticleImage, TextView tvArticleAuthor, TextView tvArticleDate,
      TextView tvArticleDescription, TextView tvArticleTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnOpenWebsite = btnOpenWebsite;
    this.clArticleDescription = clArticleDescription;
    this.clBase = clBase;
    this.ivArticleImage = ivArticleImage;
    this.tvArticleAuthor = tvArticleAuthor;
    this.tvArticleDate = tvArticleDate;
    this.tvArticleDescription = tvArticleDescription;
    this.tvArticleTitle = tvArticleTitle;
  }

  public abstract void setViewModel(@Nullable ArticleDetailViewModel viewModel);

  @Nullable
  public ArticleDetailViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentArticleDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_article_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentArticleDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentArticleDetailBinding>inflateInternal(inflater, R.layout.fragment_article_detail, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentArticleDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_article_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentArticleDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentArticleDetailBinding>inflateInternal(inflater, R.layout.fragment_article_detail, null, false, component);
  }

  public static FragmentArticleDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentArticleDetailBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentArticleDetailBinding)bind(component, view, R.layout.fragment_article_detail);
  }
}
